/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractOptions, Options } from "web3-eth-contract"
import { Block } from "web3-eth"
import { EventLog } from "web3-core"
import { EventEmitter } from "events"
import { Callback, TransactionObject } from "./types"
import { Address } from "loom-js/dist/proto/loom_pb"

export class Gateway extends Contract {
  constructor(jsonInterface: any[], address?: string, options?: ContractOptions)
  methods: {
    getERC20(contractAddress: string): TransactionObject<string>

    nonces(arg0: string): TransactionObject<string>

    getERC721(
      uid: number | string,
      contractAddress: string
    ): TransactionObject<boolean>

    getERC721X(
      tokenId: number | string,
      contractAddress: string
    ): TransactionObject<string>

    getLocalAccountInfoAsync(
      ownerAddress: Address
    ): TransactionObject<void>

    depositERC20(
      amount: number | string,
      contractAddress: string
    ): TransactionObject<void>

    withdrawERC20(
      amount: number | string,
      contractAddress: string,
      _valIndexes: (number | string)[],
      _v: (number | string)[],
      _r: (string | number[])[],
      _s: (string | number[])[]
    ): TransactionObject<void>

    withdrawERC721X(
      tokenId: number | string,
      amount: number | string,
      contractAddress: string,
      _valIndexes: (number | string)[],
      _v: (number | string)[],
      _r: (string | number[])[],
      _s: (string | number[])[]
    ): TransactionObject<void>

    withdrawERC721(
      uid: number | string,
      contractAddress: string,
      _valIndexes: (number | string)[],
      _v: (number | string)[],
      _r: (string | number[])[],
      _s: (string | number[])[]
    ): TransactionObject<void>

    withdrawETH(
      amount: number | string,
      _valIndexes: (number | string)[],
      _v: (number | string)[],
      _r: (string | number[])[],
      _s: (string | number[])[]
    ): TransactionObject<void>

    onERC721XReceived(
      _operator: string,
      _from: string,
      _tokenId: number | string,
      _amount: number | string,
      _data: (string | number[])[]
    ): TransactionObject<string>

    onERC721XBatchReceived(
      _operator: string,
      _from: string,
      _types: (number | string)[],
      _amounts: (number | string)[],
      _data: (string | number[])[]
    ): TransactionObject<string>

    onERC721Received(
      _operator: string,
      _from: string,
      _uid: number | string,
      _data: (string | number[])[]
    ): TransactionObject<string>

    loomAddress(): TransactionObject<string>
    getETH(): TransactionObject<string>
  }
  events: {
    ETHReceived(
      options?: {
        filter?: object
        fromBlock?: number | string
        topics?: (null | string)[]
      },
      cb?: Callback<EventLog>
    ): EventEmitter

    ERC721Received(
      options?: {
        filter?: object
        fromBlock?: number | string
        topics?: (null | string)[]
      },
      cb?: Callback<EventLog>
    ): EventEmitter

    ERC721XReceived(
      options?: {
        filter?: object
        fromBlock?: number | string
        topics?: (null | string)[]
      },
      cb?: Callback<EventLog>
    ): EventEmitter

    ERC721XBatchReceived(
      options?: {
        filter?: object
        fromBlock?: number | string
        topics?: (null | string)[]
      },
      cb?: Callback<EventLog>
    ): EventEmitter

    ERC20Received(
      options?: {
        filter?: object
        fromBlock?: number | string
        topics?: (null | string)[]
      },
      cb?: Callback<EventLog>
    ): EventEmitter

    TokenWithdrawn(
      options?: {
        filter?: object
        fromBlock?: number | string
        topics?: (null | string)[]
      },
      cb?: Callback<EventLog>
    ): EventEmitter

    LoomCoinReceived(
      options?: {
        filter?: object
        fromBlock?: number | string
        topics?: (null | string)[]
      },
      cb?: Callback<EventLog>
    ): EventEmitter

    allEvents: (
      options?: {
        filter?: object
        fromBlock?: number | string
        topics?: (null | string)[]
      },
      cb?: Callback<EventLog>
    ) => EventEmitter
  }
}
